#! /bin/bash
### BEGIN INIT INFO
# Provides:          hexapod
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Controle hexapod
# Description:       Programme controle hexapod
#                    et stream PiCam
### END INIT INFO

# Author: Jeremy HERGAULT <jeremy.hergault@orange.fr>

PATHPOD=/usr/local/bin/hexapod
DESC="Controle heaxpod"
NAME=hexapod
SCRIPTNAME=/etc/init.d/$NAME
SCREEN=hexapod
SCREENCAM=streamcam
COMMANDPOD="sudo java -jar hexapod.jar 3"
COMMANDCAM="./picam.sh"

cd $PATHPOD

#
# Function to show screen state
#
running()
{
	if ! screen -list | grep -q "$SCREEN"
	then
		return 1
	else
		return 0
	fi
}

#
# Function that starts the daemon/service
#
do_start()
{
	if(running)
	then
		echo "Server [$NAME] is already running"

		return 1
	else
		echo "Starting server [$NAME]"
   		screen -dmS $SCREEN $COMMANDPOD
		screen -dmS $SCREENCAM $COMMANDCAM

		renice -5 `pgrep java`

		return 0
	fi

	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started
}

#
# Function that stops the daemon/service
#
do_stop()
{
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred

	if(running)
	then
		screen -X -S $SCREENCAM stuff "^C"
		screen -X -S $SCREEN stuff "^C"
		echo "Stopping server [$NAME]"
		return 0
	else
		echo "Server [$NAME] is not running"
		return 1
	fi
}

#
# Function that sends a SIGHUP to the daemon/service
#
do_reload() {
	do_stop
	do_start
	return 0
}

case "$1" in
  start)
	do_start
	;;
  stop)
	do_stop
	;;
  status)
	if(running)
	then
		echo "is running"
	else
		echo "is not runnning"
	fi
	;;
  restart|force-reload)
	#
	# If the "reload" option is implemented then remove the
	# 'force-reload' alias
	#
	#log_daemon_msg "Restarting $DESC" "$NAME"
	do_reload
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
	exit 3
	;;
esac

: